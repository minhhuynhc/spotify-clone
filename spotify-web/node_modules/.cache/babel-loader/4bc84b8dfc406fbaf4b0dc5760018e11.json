{"ast":null,"code":"var _jsxFileName = \"E:\\\\Spotify\\\\spotify-clone\\\\src\\\\components\\\\Body\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { baseURL } from '../../config';\nimport { useDataLayerValue } from '../DataLayer';\nimport Header from './Header';\nimport SongRow from './SongRow';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = _ref => {\n  _s();\n\n  let {\n    spotify\n  } = _ref;\n  const [{\n    discover_weekly,\n    currentAudioList,\n    appData\n  }, dispatch] = useDataLayerValue();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const playSong = id => {\n    console.log(\"üê±‚Äçüêâüê±‚Äçüêâüê±‚Äçüêâ\", id);\n    dispatch({\n      type: 'changeSongPlaying',\n      songPlaying: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), console.log(\"üëÄüëÄ\", discover_weekly), console.log(\"APPDATA from body\", {\n      appData\n    }), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"song-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"audio-ls-container flex\" // onClick={() => {\n        // onTrackSelect(index);\n        // console.log(index);\n        // }}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${baseURL}/${item.avatar}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), \") : (\", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"No audio avaiable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \")}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Body, \"QgjG9PXphmdc1k2CLTHwjBMgCy4=\", true, function () {\n  return [useDataLayerValue];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","baseURL","useDataLayerValue","Header","SongRow","Body","spotify","discover_weekly","currentAudioList","appData","dispatch","searchParams","setSearchParams","useSearchParams","playSong","id","console","log","type","songPlaying","item","avatar","title","artist","textAlign"],"sources":["E:/Spotify/spotify-clone/src/components/Body/index.js"],"sourcesContent":["import React from 'react';\r\nimport { baseURL } from '../../config';\r\nimport { useDataLayerValue } from '../DataLayer';\r\nimport Header from './Header';\r\nimport SongRow from './SongRow';\r\nimport \"./style.css\"\r\nconst Body = ({spotify}) => {\r\n    const [{discover_weekly, currentAudioList, appData}, dispatch] = useDataLayerValue()\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n    const playSong = (id) => {\r\n        console.log(\"üê±‚Äçüêâüê±‚Äçüêâüê±‚Äçüêâ\", id)\r\n        dispatch({\r\n            type: 'changeSongPlaying',\r\n            songPlaying: id\r\n        })\r\n      };\r\n    return (\r\n        <div className='body'>\r\n            <Header/>\r\n            {console.log(\"üëÄüëÄ\",discover_weekly)}\r\n            {console.log(\"APPDATA from body\", {appData})}\r\n            {/* <div className=\"songList\">\r\n            {discover_weekly?.tracks.items.map(item =>                \r\n                   ( <SongRow playSong={playSong} songInfo = {item}/>)\r\n\r\n            )}\r\n            </div> */}\r\n\r\n            <ul className=\"song-list\">\r\n                {/* {currentAudioList.length ? (\r\n                    currentAudioList\r\n                        .filter((item) => {\r\n                        let filter = searchParams.get(\"filter\");\r\n                        if (!filter) return true;\r\n                        let songName = item.title.toLowerCase();\r\n                        return songName.startsWith(filter.toLowerCase());\r\n                        })\r\n\r\n                        .map((item, index) => ( */}\r\n\r\n                        <li\r\n                            className=\"audio-ls-container flex\"\r\n\r\n                            // onClick={() => {\r\n\r\n                            // onTrackSelect(index);\r\n\r\n                            // console.log(index);\r\n\r\n                            // }}\r\n                        >\r\n                            <div className=\"audio-img\">\r\n                            <img src={`${baseURL}/${item.avatar}`} alt=\"\" />\r\n                            </div>\r\n\r\n                            <div className=\"audio-info\">\r\n                            <p>{item.title}</p>\r\n                            <p>{item.artist}</p>\r\n                            </div>\r\n                        </li>\r\n\r\n                        {/* )) */}\r\n                ) : (\r\n                <div style={{ textAlign: \"center\" }}>No audio avaiable</div>\r\n                )}\r\n      </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Body;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,aAAP;;;AACA,MAAMC,IAAI,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EACxB,MAAM,CAAC;IAACC,eAAD;IAAkBC,gBAAlB;IAAoCC;EAApC,CAAD,EAA+CC,QAA/C,IAA2DR,iBAAiB,EAAlF;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCC,eAAe,EAAvD;;EACA,MAAMC,QAAQ,GAAIC,EAAD,IAAQ;IACrBC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,EAA/B;IACAL,QAAQ,CAAC;MACLQ,IAAI,EAAE,mBADD;MAELC,WAAW,EAAEJ;IAFR,CAAD,CAAR;EAID,CANH;;EAOA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBV,eAAnB,CAFL,EAGKS,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC;MAACR;IAAD,CAAjC,CAHL,eAWI;MAAI,SAAS,EAAC,WAAd;MAAA,wBAYY;QACI,SAAS,EAAC,yBADd,CAGI;QAEA;QAEA;QAEA;QATJ;QAAA,wBAWI;UAAK,SAAS,EAAC,WAAf;UAAA,uBACA;YAAK,GAAG,EAAG,GAAER,OAAQ,IAAGmB,IAAI,CAACC,MAAO,EAApC;YAAuC,GAAG,EAAC;UAA3C;YAAA;YAAA;YAAA;UAAA;QADA;UAAA;UAAA;UAAA;QAAA,QAXJ,eAeI;UAAK,SAAS,EAAC,YAAf;UAAA,wBACA;YAAA,UAAID,IAAI,CAACE;UAAT;YAAA;YAAA;YAAA;UAAA,QADA,eAEA;YAAA,UAAIF,IAAI,CAACG;UAAT;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZZ,wBAmCI;QAAK,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnCJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoDH,CA9DD;;GAAMnB,I;UAC+DH,iB;;;KAD/DG,I;AAgEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}