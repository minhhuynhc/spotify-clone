{"ast":null,"code":"var _jsxFileName = \"E:\\\\Spotify\\\\spotify-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport './App.css';\nimport { useDataLayerValue } from './components/DataLayer';\nimport Login from './components/Login';\nimport Player from './components/Player';\nimport { getTokenFromResponse } from './spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [{\n    token,\n    discover_weekly\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      dispatch({\n        type: 'changeToken',\n        token: _token\n      });\n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'changeUserData',\n          user: user\n        });\n      });\n      spotify.getUserPlaylists().then(playlist => {\n        dispatch({\n          type: 'changePlaylist',\n          playlist: playlist\n        });\n      });\n      spotify.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then(respone => {\n        console.log(\"üê±‚Äçüèçüê±‚Äçüèçüê±‚Äçüèç\", respone);\n        dispatch({\n          type: 'changeDiscover',\n          discover_weekly: respone\n        });\n      });\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WsqHBdIf9VnqjDOpNN12R8zlonw=\", false, function () {\n  return [useDataLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SpotifyWebApi","useDataLayerValue","Login","Player","getTokenFromResponse","spotify","App","token","discover_weekly","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","getUserPlaylists","playlist","getPlaylist","respone","console","log"],"sources":["E:/Spotify/spotify-clone/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport './App.css';\nimport { useDataLayerValue } from './components/DataLayer';\nimport Login from './components/Login';\nimport Player from './components/Player';\nimport { getTokenFromResponse } from './spotify';\n\nconst spotify = new SpotifyWebApi()\nfunction App() {\n  \n  const [{token, discover_weekly}, dispatch] = useDataLayerValue()\n\n\n  useEffect(() => {\n    const hash = getTokenFromResponse()\n    window.location.hash = \"\"\n    const _token = hash.access_token\n    if (_token) {\n      dispatch({\n        type: 'changeToken',\n        token: _token\n      })\n      spotify.setAccessToken(_token)\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'changeUserData',\n          user: user,\n        })\n      })\n      spotify.getUserPlaylists().then((playlist) => {\n        dispatch({\n          type: 'changePlaylist',\n          playlist: playlist\n        })\n      })\n      spotify.getPlaylist(\"37i9dQZEVXcJZyENOWUFo7\").then(respone =>\n      {\n        console.log(\"üê±‚Äçüèçüê±‚Äçüèçüê±‚Äçüèç\",respone)\n        dispatch({\n          type: 'changeDiscover',\n          discover_weekly: respone\n        })\n    }  \n      )\n    }\n\n  }, [token, dispatch])\n  return (\n    <div className=\"App\">\n      {token ? <Player spotify = {spotify}/> : <Login/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,WAAP;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,oBAAT,QAAqC,WAArC;;AAEA,MAAMC,OAAO,GAAG,IAAIL,aAAJ,EAAhB;;AACA,SAASM,GAAT,GAAe;EAAA;;EAEb,MAAM,CAAC;IAACC,KAAD;IAAQC;EAAR,CAAD,EAA2BC,QAA3B,IAAuCR,iBAAiB,EAA9D;EAGAH,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGN,oBAAoB,EAAjC;IACAO,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;IACA,MAAMG,MAAM,GAAGH,IAAI,CAACI,YAApB;;IACA,IAAID,MAAJ,EAAY;MACVJ,QAAQ,CAAC;QACPM,IAAI,EAAE,aADC;QAEPR,KAAK,EAAEM;MAFA,CAAD,CAAR;MAIAR,OAAO,CAACW,cAAR,CAAuBH,MAAvB;MACAR,OAAO,CAACY,KAAR,GAAgBC,IAAhB,CAAqBC,IAAI,IAAI;QAC3BV,QAAQ,CAAC;UACPM,IAAI,EAAE,gBADC;UAEPI,IAAI,EAAEA;QAFC,CAAD,CAAR;MAID,CALD;MAMAd,OAAO,CAACe,gBAAR,GAA2BF,IAA3B,CAAiCG,QAAD,IAAc;QAC5CZ,QAAQ,CAAC;UACPM,IAAI,EAAE,gBADC;UAEPM,QAAQ,EAAEA;QAFH,CAAD,CAAR;MAID,CALD;MAMAhB,OAAO,CAACiB,WAAR,CAAoB,wBAApB,EAA8CJ,IAA9C,CAAmDK,OAAO,IAC1D;QACEC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,OAA9B;QACAd,QAAQ,CAAC;UACPM,IAAI,EAAE,gBADC;UAEPP,eAAe,EAAEe;QAFV,CAAD,CAAR;MAIH,CAPC;IASD;EAEF,CAjCQ,EAiCN,CAAChB,KAAD,EAAQE,QAAR,CAjCM,CAAT;EAkCA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UACGF,KAAK,gBAAG,QAAC,MAAD;MAAQ,OAAO,EAAIF;IAAnB;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAmC,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA;EAD3C;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA5CQC,G;UAEsCL,iB;;;KAFtCK,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}